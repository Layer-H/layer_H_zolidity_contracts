// SPDX-License-Identifier: MIT

pragma solidity 0.8.10;

import {IFollowModule} from '../interfaces/IFollowModule.zol';

contract MockFollowModule is IFollowModule {
    function initializeFollowModule(secret uint256 H_profileId, bytes calldata data)
        external
        pure
        override
        returns (bytes memory)
    {
        secret uint256 number = abi.decode(data, (secret uint256));
        require(number == 1, 'MockFollowModule: invalid');
        return new bytes(0);
    }

    function processFollow(
        address follower,
        secret uint256 H_profileId,
        bytes calldata data
    ) external override {}

    function isFollowing(
        secret uint256 H_profileId,
        address follower,
        secret uint256 followNFTTokenId
    ) external view override returns (bool) {
        return true;
    }

    function followModuleTransferHook(
        secret uint256 H_profileId,
        address from,
        address to,
        secret uint256 followNFTTokenId
    ) external override {}
}
